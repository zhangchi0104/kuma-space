@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@theme {
	--color-border: var(--border);
	--color-input: var(--input);
	--color-ring: var(--ring);
	--color-background: var(--background);
	--color-foreground: var(--foreground);
	--color-bilibili: #00a1d6;
	--color-github: #24292e;
	--color-linkedin: #0a66c2;
	--color-mail: #ff4d4f;

	--color-primary: var(--primary);
	--color-primary-foreground: var(--primary-foreground);

	--color-secondary: var(--secondary);
	--color-secondary-foreground: var(--secondary-foreground);

	--color-destructive: var(--destructive);
	--color-destructive-foreground: var(--destructive-foreground);

	--color-muted: var(--muted);
	--color-muted-foreground: var(--muted-foreground);

	--color-accent: var(--accent);
	--color-accent-foreground: var(--accent-foreground);

	--color-popover: var(--popover);
	--color-popover-foreground: var(--popover-foreground);

	--color-card: var(--card);
	--color-card-foreground: var(--card-foreground);

	--radius-lg: var(--radius);
	--radius-md: calc(var(--radius) - 2px);
	--radius-sm: calc(var(--radius) - 4px);

	--animate-accordion-down: accordion-down 0.2s ease-out;
	--animate-accordion-up: accordion-up 0.2s ease-out;
	--animate-bounce-calmer: bounce-calmer 1.8s infinite ease-in-out;
	--animate-typing: typing 2s infinite ease-in-out;

	@keyframes accordion-down {
		from {
			height: 0;
		}

		to {
			height: var(--radix-accordion-content-height);
		}
	}

	@keyframes accordion-up {
		from {
			height: var(--radix-accordion-content-height);
		}

		to {
			height: 0;
		}
	}

	@keyframes bounce-calmer {
		0%,
		100% {
			transform: translateY(-15%);
		}

		50% {
			transform: translateY(0);
		}
	}

	@keyframes typing {
		0% {
			width: 0;
		}

		100% {
			width: 100%;
		}
	}
}

@utility container {
	margin-inline: auto;
	padding-inline: 2rem;

	@media (width >= --theme(--breakpoint-sm)) {
		max-width: none;
	}

	@media (width >= 1400px) {
		max-width: 1400px;
	}
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentcolor);
	}
}

@utility abs-center-x {
	@apply absolute left-1/2 -translate-x-1/2;
}

@utility abs-center-y {
	@apply absolute top-1/2 -translate-y-1/2;
}

@utility posts-timeline {
	--marker-line-width: 2px;
	--marker-dot-size: 8px;

	& > .posts-timeline-item:not(:only-child) > p:last-child::before {
		content: "";
		position: absolute;
		left: 0;
		height: 100%;
		width: var(--marker-line-width, 2px);
	}

	& > .posts-timeline-item > p:last-child {
		position: relative;
		z-index: -1;
	}

	& > .posts-timeline-item > p:last-child::after {
		content: "";
		top: 50%;
		left: calc(-3px);
		position: absolute;
		height: var(--marker-dot-size, 8px);
		width: var(--marker-dot-size, 8px);
		border-radius: 50%;
		transform: translateY(-50%);
	}

	& > .posts-timeline-item:last-child > p:last-child::before {
		top: -50%;
	}

	& > .posts-timeline-item:first-child > p:last-child::before {
		top: 50%;
	}
}

@utility posts-timeline-item {
	.posts-timeline > &:not(:only-child) > p:last-child::before {
		content: "";
		position: absolute;
		left: 0;
		height: 100%;
		width: var(--marker-line-width, 2px);
	}

	.posts-timeline > & > p:last-child {
		position: relative;
		z-index: -1;
	}

	.posts-timeline > & > p:last-child::after {
		content: "";
		top: 50%;
		left: calc(-3px);
		position: absolute;
		height: var(--marker-dot-size, 8px);
		width: var(--marker-dot-size, 8px);
		border-radius: 50%;
		transform: translateY(-50%);
	}

	.posts-timeline > &:last-child > p:last-child::before {
		top: -50%;
	}

	.posts-timeline > &:first-child > p:last-child::before {
		top: 50%;
	}
}

@layer base {
	:root {
		--background: hsl(0 0% 100%);
		--foreground: hsl(222.2 84% 4.9%);

		--card: hsl(0 0% 100%);
		--card-foreground: hsl(222.2 84% 4.9%);

		--popover: hsl(0 0% 100%);
		--popover-foreground: hsl(222.2 84% 4.9%);

		--primary: hsl(222.2 47.4% 11.2%);
		--primary-foreground: hsl(210 40% 98%);

		--secondary: hsl(210 40% 96.1%);
		--secondary-foreground: hsl(222.2 47.4% 11.2%);

		--muted: hsl(210 40% 96.1%);
		--muted-foreground: hsl(215.4 16.3% 46.9%);

		--accent: hsl(210 40% 96.1%);
		--accent-foreground: hsl(222.2 47.4% 11.2%);

		--destructive: hsl(0 84.2% 60.2%);
		--destructive-foreground: hsl(210 40% 98%);

		--border: hsl(214.3 31.8% 91.4%);
		--input: hsl(214.3 31.8% 91.4%);
		--ring: hsl(222.2 84% 4.9%);

		--radius: 0.5rem;
	}

	:root[class~="dark"] {
		--background: hsl(222.2 84% 4.9%);
		--foreground: hsl(210 40% 98%);

		--card: hsl(222.2 84% 4.9%);
		--card-foreground: hsl(210 40% 98%);

		--popover: hsl(222.2 84% 4.9%);
		--popover-foreground: hsl(210 40% 98%);

		--primary: hsl(210 40% 98%);
		--primary-foreground: hsl(222.2 47.4% 11.2%);

		--secondary: hsl(217.2 32.6% 17.5%);
		--secondary-foreground: hsl(210 40% 98%);

		--muted: hsl(217.2 32.6% 17.5%);
		--muted-foreground: hsl(215 20.2% 65.1%);

		--accent: hsl(217.2 32.6% 17.5%);
		--accent-foreground: hsl(210 40% 98%);

		--destructive-foreground: hsl(210 40% 98%);

		--border: hsl(217.2 32.6% 17.5%);
		--input: hsl(217.2 32.6% 17.5%);
		--ring: hsl(212.7 26.8% 83.9%);
	}
}

@layer base {
	* {
		@apply border-border;
	}

	body {
		@apply bg-background text-foreground;
	}
}

@layer base {
	.min-safe-h-screen {
		/* equivalent to 100dvh in major browsers */
		min-height: calc(
			100vh -
			env(safe-area-inset-bottom, 0) -
			env(safe-area-inset-top, 0)
		);
	}

	.min-safe-h-screen-minus-header {
		min-height: calc(
			100vh -
			env(safe-area-inset-bottom, 0) -
			env(safe-area-inset-top, 0) -
			3rem
		);
	}

	@supports (-webkit-touch-callout: none) {
		.min-safe-h-screen {
			/* for ios safari 15, safe-area-inset-bottom is 0, so a special fix apply here */
			min-height: -webkit-fill-available;
		}
	}

	.safe-h-screen {
		height: calc(
			100vh -
			env(safe-area-inset-bottom, 0) -
			env(safe-area-inset-top, 0)
		);
	}

	@supports (-webkit-touch-callout: none) {
		.safe-h-screen {
			height: -webkit-fill-available;
		}
	}
}

@layer base {
	* {
		@apply border-border outline-ring/50;
	}

	body {
		@apply bg-background text-foreground;
	}
}
