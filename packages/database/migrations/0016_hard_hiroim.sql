ALTER POLICY "Authenticated can delete their own moment" ON "moments" TO authenticated USING (authorize('moments:self:write') and "moments"."author_id" = (select auth.uid()) and (auth.jwt() ->>'is_anonymous')::boolean = false);--> statement-breakpoint
ALTER POLICY "Authenticated can write their own moment" ON "moments" TO authenticated WITH CHECK (authorize('moments:self:write') and "moments"."author_id" = (select auth.uid()) and (auth.jwt() ->>'is_anonymous')::boolean = false);--> statement-breakpoint
ALTER POLICY "Authenticated can update their own moment" ON "moments" TO authenticated USING (authorize('moments:self:write') and "moments"."author_id" = (select auth.uid()) and (auth.jwt() ->>'is_anonymous')::boolean = false) WITH CHECK ("moments"."author_id" = (select auth.uid()));--> statement-breakpoint
ALTER POLICY "Authenticated can delete their own post" ON "posts" TO authenticated USING (authorize('posts:self:write') and "posts"."author_id" = ((select auth.uid())) and ((auth.jwt() ->>'is_anonymous')::boolean) = false);--> statement-breakpoint
ALTER POLICY "Authenticated can insert a post" ON "posts" TO authenticated WITH CHECK (authorize('posts:all:write') and "posts"."author_id" = (select auth.uid()) and (auth.jwt() ->>'is_anonymous')::boolean = false);--> statement-breakpoint
ALTER POLICY "Authenticated can update their own post" ON "posts" TO authenticated USING (authorize('posts:self:write') and "posts"."author_id" = ((select auth.uid())) and ((auth.jwt() ->>'is_anonymous')::boolean) = false) WITH CHECK ("posts"."author_id" = ((select auth.uid())));